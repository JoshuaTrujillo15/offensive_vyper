# @version ^0.3.2

"""
@title Ownable Proxy Exploit

TARGET: `contracts/proxy/ownable_proxy.vy`

There's an ownable smart wallet that forwards contract calls. It also happens
to take deposits and allows calls with a non-zero value. It's a shame that
you're not the owner. Your objective is to become the owner and extract all of
the Ether in a single transaction.

Good Hacking.
"""

interface OwnableProxy:
	def owner() -> address: view
	def forward_call(target: address, payload: Bytes[32]): nonpayable
	def forward_call_with_value(target: address, payload: Bytes[32], amount: uint256): nonpayable
	def forward_delegatecall(target: address, payload: Bytes[32]): nonpayable

target: address

@external
def __init__(target: address):
	self.target = target

# YOUR EXPLOIT HERE

